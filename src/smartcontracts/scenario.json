[
 {
  "shortname": "Non_Fungible_Token",
  "longname": "Non Fungible Token",
  "scenario": [
   {
    "action": "newContract",
    "accept_unknown_types": false,
    "export": "(template_id (static_id 0 (\"//smartpy.io/dev/templates/FA2.py\" 366)) \nstorage (record (\"//smartpy.io/dev/templates/FA2.py\" 371) (administrator (resolve (attr (account_of_seed \"admin\" (\"nft_market_place.py\" 80)) \"address\" (\"nft_market_place.py\" 80)) (\"nft_market_place.py\" 80))) (all_tokens (literal (nat 0) (\"//smartpy.io/dev/templates/FA2.py\" 299))) (ledger (type_annotation (big_map (\"//smartpy.io/dev/templates/FA2.py\" 361) ) (bigmap (unknown 1) (record ((balance \"nat\")) None (\"//smartpy.io/dev/templates/FA2.py\" 221))) (\"//smartpy.io/dev/templates/FA2.py\" 361))) (metadata (big_map (\"nft_market_place.py\" 84) ((literal (string \"\") (\"nft_market_place.py\" 85)) (literal (bytes \"0x697066733a2f2f516d57386a504d64426d46767353456f4c57505068616f7a4e366a47514678786b77754d4c745646714579364662\") (\"nft_market_place.py\" 84))))) (operators (type_annotation (big_map (\"//smartpy.io/dev/templates/FA2.py\" 244) ) (bigmap (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"//smartpy.io/dev/templates/FA2.py\" 237)) \"unit\") (\"//smartpy.io/dev/templates/FA2.py\" 244))) (paused (literal (bool False) (\"//smartpy.io/dev/templates/FA2.py\" 366))) (token_metadata (type_annotation (big_map (\"//smartpy.io/dev/templates/FA2.py\" 362) ) (bigmap \"nat\" (record ((token_id \"nat\") (token_info (map \"string\" \"bytes\"))) None (\"//smartpy.io/dev/templates/FA2.py\" 282))) (\"//smartpy.io/dev/templates/FA2.py\" 362))) (total_supply (type_annotation (big_map (\"//smartpy.io/dev/templates/FA2.py\" 371) ) (bigmap \"nat\" \"nat\") (\"//smartpy.io/dev/templates/FA2.py\" 371))))\nstorage_type (())\nmessages ((balance_of True None None True (\"//smartpy.io/dev/templates/FA2.py\" 416) ((verify (not (attr (data) \"paused\" (\"//smartpy.io/dev/templates/FA2.py\" 507)) (\"//smartpy.io/dev/templates/FA2.py\" 419)) (literal (string \"FA2_PAUSED\") (\"//smartpy.io/dev/templates/FA2.py\" 419)) (\"//smartpy.io/dev/templates/FA2.py\" 419)) (set_type (params (\"//smartpy.io/dev/templates/FA2.py\" 416)) (record ((callback (contract (list (record ((balance \"nat\") (request (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"//smartpy.io/dev/templates/FA2.py\" 265)))) (Some ((\"request\") (\"balance\"))) (\"//smartpy.io/dev/templates/FA2.py\" 270))))) (requests (list (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"//smartpy.io/dev/templates/FA2.py\" 265))))) (Some ((\"requests\") (\"callback\"))) (\"//smartpy.io/dev/templates/FA2.py\" 275)) (\"//smartpy.io/dev/templates/FA2.py\" 420)) (defineLocal \"responses\" (map_function (attr (params (\"//smartpy.io/dev/templates/FA2.py\" 416)) \"requests\" (\"//smartpy.io/dev/templates/FA2.py\" 439)) (lambda 0 None False \"\" (\"//smartpy.io/dev/templates/FA2.py\" 439) ((verify (contains (attr (data) \"token_metadata\" (\"//smartpy.io/dev/templates/FA2.py\" 423)) (attr (lambdaParams 0 \"\" (\"//smartpy.io/dev/templates/FA2.py\" 439) (unknown 2)) \"token_id\" (\"//smartpy.io/dev/templates/FA2.py\" 422)) (\"//smartpy.io/dev/templates/FA2.py\" 423)) (literal (string \"FA2_TOKEN_UNDEFINED\") (\"//smartpy.io/dev/templates/FA2.py\" 423)) (\"//smartpy.io/dev/templates/FA2.py\" 423)) (ifBlock (contains (attr (data) \"ledger\" (\"//smartpy.io/dev/templates/FA2.py\" 424)) (tuple (\"//smartpy.io/dev/templates/FA2.py\" 210) (type_annotation (attr (lambdaParams 0 \"\" (\"//smartpy.io/dev/templates/FA2.py\" 439) (unknown 2)) \"owner\" (\"//smartpy.io/dev/templates/FA2.py\" 422)) \"address\" (\"//smartpy.io/dev/templates/FA2.py\" 205)) (type_annotation (attr (lambdaParams 0 \"\" (\"//smartpy.io/dev/templates/FA2.py\" 439) (unknown 2)) \"token_id\" (\"//smartpy.io/dev/templates/FA2.py\" 422)) \"nat\" (\"//smartpy.io/dev/templates/FA2.py\" 206))) (\"//smartpy.io/dev/templates/FA2.py\" 424)) ((result (record (\"//smartpy.io/dev/templates/FA2.py\" 431) (balance (attr (getItem (attr (data) \"ledger\" (\"//smartpy.io/dev/templates/FA2.py\" 424)) (tuple (\"//smartpy.io/dev/templates/FA2.py\" 210) (type_annotation (attr (lambdaParams 0 \"\" (\"//smartpy.io/dev/templates/FA2.py\" 439) (unknown 2)) \"owner\" (\"//smartpy.io/dev/templates/FA2.py\" 422)) \"address\" (\"//smartpy.io/dev/templates/FA2.py\" 205)) (type_annotation (attr (lambdaParams 0 \"\" (\"//smartpy.io/dev/templates/FA2.py\" 439) (unknown 2)) \"token_id\" (\"//smartpy.io/dev/templates/FA2.py\" 422)) \"nat\" (\"//smartpy.io/dev/templates/FA2.py\" 206))) (\"//smartpy.io/dev/templates/FA2.py\" 425)) \"balance\" (\"//smartpy.io/dev/templates/FA2.py\" 425))) (request (record (\"//smartpy.io/dev/templates/FA2.py\" 430) (owner (type_annotation (attr (lambdaParams 0 \"\" (\"//smartpy.io/dev/templates/FA2.py\" 439) (unknown 2)) \"owner\" (\"//smartpy.io/dev/templates/FA2.py\" 422)) \"address\" (\"//smartpy.io/dev/templates/FA2.py\" 429))) (token_id (type_annotation (attr (lambdaParams 0 \"\" (\"//smartpy.io/dev/templates/FA2.py\" 439) (unknown 2)) \"token_id\" (\"//smartpy.io/dev/templates/FA2.py\" 422)) \"nat\" (\"//smartpy.io/dev/templates/FA2.py\" 430)))))) (\"//smartpy.io/dev/templates/FA2.py\" 431))) (\"//smartpy.io/dev/templates/FA2.py\" 424)) (elseBlock ((result (record (\"//smartpy.io/dev/templates/FA2.py\" 438) (balance (literal (intOrNat 0) (\"//smartpy.io/dev/templates/FA2.py\" 438))) (request (record (\"//smartpy.io/dev/templates/FA2.py\" 437) (owner (type_annotation (attr (lambdaParams 0 \"\" (\"//smartpy.io/dev/templates/FA2.py\" 439) (unknown 2)) \"owner\" (\"//smartpy.io/dev/templates/FA2.py\" 422)) \"address\" (\"//smartpy.io/dev/templates/FA2.py\" 436))) (token_id (type_annotation (attr (lambdaParams 0 \"\" (\"//smartpy.io/dev/templates/FA2.py\" 439) (unknown 2)) \"token_id\" (\"//smartpy.io/dev/templates/FA2.py\" 422)) \"nat\" (\"//smartpy.io/dev/templates/FA2.py\" 437)))))) (\"//smartpy.io/dev/templates/FA2.py\" 438)))))) (\"//smartpy.io/dev/templates/FA2.py\" 439)) True (\"//smartpy.io/dev/templates/FA2.py\" 439)) (set (operations (\"//smartpy.io/dev/templates/FA2.py\" 441)) (cons (transfer (getLocal \"responses\" (\"//smartpy.io/dev/templates/FA2.py\" 441)) (literal (mutez 0) (\"//smartpy.io/dev/templates/FA2.py\" 441)) (type_annotation (attr (params (\"//smartpy.io/dev/templates/FA2.py\" 416)) \"callback\" (\"//smartpy.io/dev/templates/FA2.py\" 440)) (contract (list (record ((balance \"nat\") (request (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"//smartpy.io/dev/templates/FA2.py\" 265)))) (Some ((\"request\") (\"balance\"))) (\"//smartpy.io/dev/templates/FA2.py\" 270)))) (\"//smartpy.io/dev/templates/FA2.py\" 440)) (\"//smartpy.io/dev/templates/FA2.py\" 441)) (operations (\"//smartpy.io/dev/templates/FA2.py\" 441)) (\"//smartpy.io/dev/templates/FA2.py\" 441)) (\"//smartpy.io/dev/templates/FA2.py\" 441)))) (mint True None None True (\"//smartpy.io/dev/templates/FA2.py\" 521) ((verify (eq (sender) (attr (data) \"administrator\" (\"//smartpy.io/dev/templates/FA2.py\" 498)) (\"//smartpy.io/dev/templates/FA2.py\" 498)) (literal (string \"FA2_NOT_ADMIN\") (\"//smartpy.io/dev/templates/FA2.py\" 523)) (\"//smartpy.io/dev/templates/FA2.py\" 523)) (verify (eq (attr (params (\"//smartpy.io/dev/templates/FA2.py\" 521)) \"amount\" (\"//smartpy.io/dev/templates/FA2.py\" 528)) (literal (intOrNat 1) (\"//smartpy.io/dev/templates/FA2.py\" 528)) (\"//smartpy.io/dev/templates/FA2.py\" 528)) (literal (string \"NFT-asset: amount <> 1\") (\"//smartpy.io/dev/templates/FA2.py\" 528)) (\"//smartpy.io/dev/templates/FA2.py\" 528)) (verify (not (lt (attr (params (\"//smartpy.io/dev/templates/FA2.py\" 521)) \"token_id\" (\"//smartpy.io/dev/templates/FA2.py\" 530)) (attr (data) \"all_tokens\" (\"//smartpy.io/dev/templates/FA2.py\" 530)) (\"//smartpy.io/dev/templates/FA2.py\" 310)) (\"//smartpy.io/dev/templates/FA2.py\" 530)) (literal (string \"NFT-asset: cannot mint twice same token\") (\"//smartpy.io/dev/templates/FA2.py\" 531)) (\"//smartpy.io/dev/templates/FA2.py\" 531)) (ifBlock (contains (attr (data) \"ledger\" (\"//smartpy.io/dev/templates/FA2.py\" 424)) (tuple (\"//smartpy.io/dev/templates/FA2.py\" 210) (type_annotation (attr (params (\"//smartpy.io/dev/templates/FA2.py\" 521)) \"address\" (\"//smartpy.io/dev/templates/FA2.py\" 533)) \"address\" (\"//smartpy.io/dev/templates/FA2.py\" 205)) (type_annotation (attr (params (\"//smartpy.io/dev/templates/FA2.py\" 521)) \"token_id\" (\"//smartpy.io/dev/templates/FA2.py\" 530)) \"nat\" (\"//smartpy.io/dev/templates/FA2.py\" 206))) (\"//smartpy.io/dev/templates/FA2.py\" 534)) ((set (attr (getItem (attr (data) \"ledger\" (\"//smartpy.io/dev/templates/FA2.py\" 424)) (tuple (\"//smartpy.io/dev/templates/FA2.py\" 210) (type_annotation (attr (params (\"//smartpy.io/dev/templates/FA2.py\" 521)) \"address\" (\"//smartpy.io/dev/templates/FA2.py\" 533)) \"address\" (\"//smartpy.io/dev/templates/FA2.py\" 205)) (type_annotation (attr (params (\"//smartpy.io/dev/templates/FA2.py\" 521)) \"token_id\" (\"//smartpy.io/dev/templates/FA2.py\" 530)) \"nat\" (\"//smartpy.io/dev/templates/FA2.py\" 206))) (\"//smartpy.io/dev/templates/FA2.py\" 535)) \"balance\" (\"//smartpy.io/dev/templates/FA2.py\" 535)) (add (attr (getItem (attr (data) \"ledger\" (\"//smartpy.io/dev/templates/FA2.py\" 424)) (tuple (\"//smartpy.io/dev/templates/FA2.py\" 210) (type_annotation (attr (params (\"//smartpy.io/dev/templates/FA2.py\" 521)) \"address\" (\"//smartpy.io/dev/templates/FA2.py\" 533)) \"address\" (\"//smartpy.io/dev/templates/FA2.py\" 205)) (type_annotation (attr (params (\"//smartpy.io/dev/templates/FA2.py\" 521)) \"token_id\" (\"//smartpy.io/dev/templates/FA2.py\" 530)) \"nat\" (\"//smartpy.io/dev/templates/FA2.py\" 206))) (\"//smartpy.io/dev/templates/FA2.py\" 535)) \"balance\" (\"//smartpy.io/dev/templates/FA2.py\" 535)) (attr (params (\"//smartpy.io/dev/templates/FA2.py\" 521)) \"amount\" (\"//smartpy.io/dev/templates/FA2.py\" 528)) (\"//smartpy.io/dev/templates/FA2.py\" 535)) (\"//smartpy.io/dev/templates/FA2.py\" 535))) (\"//smartpy.io/dev/templates/FA2.py\" 534)) (elseBlock ((set (getItem (attr (data) \"ledger\" (\"//smartpy.io/dev/templates/FA2.py\" 424)) (tuple (\"//smartpy.io/dev/templates/FA2.py\" 210) (type_annotation (attr (params (\"//smartpy.io/dev/templates/FA2.py\" 521)) \"address\" (\"//smartpy.io/dev/templates/FA2.py\" 533)) \"address\" (\"//smartpy.io/dev/templates/FA2.py\" 205)) (type_annotation (attr (params (\"//smartpy.io/dev/templates/FA2.py\" 521)) \"token_id\" (\"//smartpy.io/dev/templates/FA2.py\" 530)) \"nat\" (\"//smartpy.io/dev/templates/FA2.py\" 206))) (\"//smartpy.io/dev/templates/FA2.py\" 537)) (record (\"//smartpy.io/dev/templates/FA2.py\" 223) (balance (attr (params (\"//smartpy.io/dev/templates/FA2.py\" 521)) \"amount\" (\"//smartpy.io/dev/templates/FA2.py\" 528)))) (\"//smartpy.io/dev/templates/FA2.py\" 537)))) (ifBlock (not (lt (attr (params (\"//smartpy.io/dev/templates/FA2.py\" 521)) \"token_id\" (\"//smartpy.io/dev/templates/FA2.py\" 530)) (attr (data) \"all_tokens\" (\"//smartpy.io/dev/templates/FA2.py\" 530)) (\"//smartpy.io/dev/templates/FA2.py\" 310)) (\"//smartpy.io/dev/templates/FA2.py\" 538)) ((verify (eq (attr (data) \"all_tokens\" (\"//smartpy.io/dev/templates/FA2.py\" 530)) (attr (params (\"//smartpy.io/dev/templates/FA2.py\" 521)) \"token_id\" (\"//smartpy.io/dev/templates/FA2.py\" 530)) (\"//smartpy.io/dev/templates/FA2.py\" 304)) (literal (string \"Token-IDs should be consecutive\") (\"//smartpy.io/dev/templates/FA2.py\" 304)) (\"//smartpy.io/dev/templates/FA2.py\" 304)) (set (attr (data) \"all_tokens\" (\"//smartpy.io/dev/templates/FA2.py\" 530)) (add (attr (params (\"//smartpy.io/dev/templates/FA2.py\" 521)) \"token_id\" (\"//smartpy.io/dev/templates/FA2.py\" 530)) (literal (intOrNat 1) (\"//smartpy.io/dev/templates/FA2.py\" 305)) (\"//smartpy.io/dev/templates/FA2.py\" 305)) (\"//smartpy.io/dev/templates/FA2.py\" 305)) (set (getItem (attr (data) \"token_metadata\" (\"//smartpy.io/dev/templates/FA2.py\" 423)) (attr (params (\"//smartpy.io/dev/templates/FA2.py\" 521)) \"token_id\" (\"//smartpy.io/dev/templates/FA2.py\" 530)) (\"//smartpy.io/dev/templates/FA2.py\" 542)) (record (\"//smartpy.io/dev/templates/FA2.py\" 542) (token_id (attr (params (\"//smartpy.io/dev/templates/FA2.py\" 521)) \"token_id\" (\"//smartpy.io/dev/templates/FA2.py\" 530))) (token_info (attr (params (\"//smartpy.io/dev/templates/FA2.py\" 521)) \"metadata\" (\"//smartpy.io/dev/templates/FA2.py\" 542)))) (\"//smartpy.io/dev/templates/FA2.py\" 542))) (\"//smartpy.io/dev/templates/FA2.py\" 538)) (set (getItem (attr (data) \"total_supply\" (\"//smartpy.io/dev/templates/FA2.py\" 545)) (attr (params (\"//smartpy.io/dev/templates/FA2.py\" 521)) \"token_id\" (\"//smartpy.io/dev/templates/FA2.py\" 530)) (\"//smartpy.io/dev/templates/FA2.py\" 545)) (add (attr (params (\"//smartpy.io/dev/templates/FA2.py\" 521)) \"amount\" (\"//smartpy.io/dev/templates/FA2.py\" 528)) (getItemDefault (attr (data) \"total_supply\" (\"//smartpy.io/dev/templates/FA2.py\" 545)) (attr (params (\"//smartpy.io/dev/templates/FA2.py\" 521)) \"token_id\" (\"//smartpy.io/dev/templates/FA2.py\" 530)) (literal (intOrNat 0) (\"//smartpy.io/dev/templates/FA2.py\" 545)) (\"//smartpy.io/dev/templates/FA2.py\" 545)) (\"//smartpy.io/dev/templates/FA2.py\" 545)) (\"//smartpy.io/dev/templates/FA2.py\" 545)))) (set_administrator True None None True (\"//smartpy.io/dev/templates/FA2.py\" 500) ((verify (eq (sender) (attr (data) \"administrator\" (\"//smartpy.io/dev/templates/FA2.py\" 498)) (\"//smartpy.io/dev/templates/FA2.py\" 498)) (literal (string \"FA2_NOT_ADMIN\") (\"//smartpy.io/dev/templates/FA2.py\" 502)) (\"//smartpy.io/dev/templates/FA2.py\" 502)) (set (attr (data) \"administrator\" (\"//smartpy.io/dev/templates/FA2.py\" 498)) (params (\"//smartpy.io/dev/templates/FA2.py\" 500)) (\"//smartpy.io/dev/templates/FA2.py\" 503)))) (set_metadata True None None True (\"//smartpy.io/dev/templates/FA2.py\" 515) ((verify (eq (sender) (attr (data) \"administrator\" (\"//smartpy.io/dev/templates/FA2.py\" 498)) (\"//smartpy.io/dev/templates/FA2.py\" 498)) (literal (string \"FA2_NOT_ADMIN\") (\"//smartpy.io/dev/templates/FA2.py\" 517)) (\"//smartpy.io/dev/templates/FA2.py\" 517)) (set (getItem (attr (data) \"metadata\" (\"//smartpy.io/dev/templates/FA2.py\" 518)) (attr (params (\"//smartpy.io/dev/templates/FA2.py\" 515)) \"k\" (\"nft_market_place.py\" 85)) (\"//smartpy.io/dev/templates/FA2.py\" 518)) (attr (params (\"//smartpy.io/dev/templates/FA2.py\" 515)) \"v\" (\"nft_market_place.py\" 85)) (\"//smartpy.io/dev/templates/FA2.py\" 518)))) (set_pause True None None True (\"//smartpy.io/dev/templates/FA2.py\" 509) ((verify (eq (sender) (attr (data) \"administrator\" (\"//smartpy.io/dev/templates/FA2.py\" 498)) (\"//smartpy.io/dev/templates/FA2.py\" 498)) (literal (string \"FA2_NOT_ADMIN\") (\"//smartpy.io/dev/templates/FA2.py\" 511)) (\"//smartpy.io/dev/templates/FA2.py\" 511)) (set (attr (data) \"paused\" (\"//smartpy.io/dev/templates/FA2.py\" 507)) (params (\"//smartpy.io/dev/templates/FA2.py\" 509)) (\"//smartpy.io/dev/templates/FA2.py\" 512)))) (transfer True None None True (\"//smartpy.io/dev/templates/FA2.py\" 374) ((verify (not (attr (data) \"paused\" (\"//smartpy.io/dev/templates/FA2.py\" 507)) (\"//smartpy.io/dev/templates/FA2.py\" 376)) (literal (string \"FA2_PAUSED\") (\"//smartpy.io/dev/templates/FA2.py\" 376)) (\"//smartpy.io/dev/templates/FA2.py\" 376)) (set_type (params (\"//smartpy.io/dev/templates/FA2.py\" 374)) (list (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"//smartpy.io/dev/templates/FA2.py\" 167))))) (Some ((\"from_\") (\"txs\"))) (\"//smartpy.io/dev/templates/FA2.py\" 171))) (\"//smartpy.io/dev/templates/FA2.py\" 377)) (forGroup \"transfer\" (params (\"//smartpy.io/dev/templates/FA2.py\" 374)) ((forGroup \"tx\" (attr (iter \"transfer\" (\"//smartpy.io/dev/templates/FA2.py\" 378)) \"txs\" (\"//smartpy.io/dev/templates/FA2.py\" 380)) ((verify (or (or (eq (sender) (attr (data) \"administrator\" (\"//smartpy.io/dev/templates/FA2.py\" 498)) (\"//smartpy.io/dev/templates/FA2.py\" 498)) (eq (attr (iter \"transfer\" (\"//smartpy.io/dev/templates/FA2.py\" 378)) \"from_\" (\"//smartpy.io/dev/templates/FA2.py\" 379)) (sender) (\"//smartpy.io/dev/templates/FA2.py\" 385)) (\"//smartpy.io/dev/templates/FA2.py\" 385)) (contains (attr (data) \"operators\" (\"//smartpy.io/dev/templates/FA2.py\" 389)) (type_annotation (record (\"//smartpy.io/dev/templates/FA2.py\" 248) (operator (sender)) (owner (attr (iter \"transfer\" (\"//smartpy.io/dev/templates/FA2.py\" 378)) \"from_\" (\"//smartpy.io/dev/templates/FA2.py\" 379))) (token_id (attr (iter \"tx\" (\"//smartpy.io/dev/templates/FA2.py\" 380)) \"token_id\" (\"//smartpy.io/dev/templates/FA2.py\" 392)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"//smartpy.io/dev/templates/FA2.py\" 237)) (\"//smartpy.io/dev/templates/FA2.py\" 249)) (\"//smartpy.io/dev/templates/FA2.py\" 259)) (\"//smartpy.io/dev/templates/FA2.py\" 392)) (literal (string \"FA2_NOT_OPERATOR\") (\"//smartpy.io/dev/templates/FA2.py\" 395)) (\"//smartpy.io/dev/templates/FA2.py\" 395)) (verify (contains (attr (data) \"token_metadata\" (\"//smartpy.io/dev/templates/FA2.py\" 423)) (attr (iter \"tx\" (\"//smartpy.io/dev/templates/FA2.py\" 380)) \"token_id\" (\"//smartpy.io/dev/templates/FA2.py\" 392)) (\"//smartpy.io/dev/templates/FA2.py\" 397)) (literal (string \"FA2_TOKEN_UNDEFINED\") (\"//smartpy.io/dev/templates/FA2.py\" 398)) (\"//smartpy.io/dev/templates/FA2.py\" 398)) (ifBlock (gt (attr (iter \"tx\" (\"//smartpy.io/dev/templates/FA2.py\" 380)) \"amount\" (\"//smartpy.io/dev/templates/FA2.py\" 401)) (literal (intOrNat 0) (\"//smartpy.io/dev/templates/FA2.py\" 401)) (\"//smartpy.io/dev/templates/FA2.py\" 401)) ((verify (ge (attr (getItem (attr (data) \"ledger\" (\"//smartpy.io/dev/templates/FA2.py\" 424)) (tuple (\"//smartpy.io/dev/templates/FA2.py\" 210) (type_annotation (attr (iter \"transfer\" (\"//smartpy.io/dev/templates/FA2.py\" 378)) \"from_\" (\"//smartpy.io/dev/templates/FA2.py\" 379)) \"address\" (\"//smartpy.io/dev/templates/FA2.py\" 205)) (type_annotation (attr (iter \"tx\" (\"//smartpy.io/dev/templates/FA2.py\" 380)) \"token_id\" (\"//smartpy.io/dev/templates/FA2.py\" 392)) \"nat\" (\"//smartpy.io/dev/templates/FA2.py\" 206))) (\"//smartpy.io/dev/templates/FA2.py\" 404)) \"balance\" (\"//smartpy.io/dev/templates/FA2.py\" 404)) (attr (iter \"tx\" (\"//smartpy.io/dev/templates/FA2.py\" 380)) \"amount\" (\"//smartpy.io/dev/templates/FA2.py\" 401)) (\"//smartpy.io/dev/templates/FA2.py\" 404)) (literal (string \"FA2_INSUFFICIENT_BALANCE\") (\"//smartpy.io/dev/templates/FA2.py\" 405)) (\"//smartpy.io/dev/templates/FA2.py\" 405)) (set (attr (getItem (attr (data) \"ledger\" (\"//smartpy.io/dev/templates/FA2.py\" 424)) (tuple (\"//smartpy.io/dev/templates/FA2.py\" 210) (type_annotation (attr (iter \"transfer\" (\"//smartpy.io/dev/templates/FA2.py\" 378)) \"from_\" (\"//smartpy.io/dev/templates/FA2.py\" 379)) \"address\" (\"//smartpy.io/dev/templates/FA2.py\" 205)) (type_annotation (attr (iter \"tx\" (\"//smartpy.io/dev/templates/FA2.py\" 380)) \"token_id\" (\"//smartpy.io/dev/templates/FA2.py\" 392)) \"nat\" (\"//smartpy.io/dev/templates/FA2.py\" 206))) (\"//smartpy.io/dev/templates/FA2.py\" 408)) \"balance\" (\"//smartpy.io/dev/templates/FA2.py\" 408)) (openVariant (isNat (sub (attr (getItem (attr (data) \"ledger\" (\"//smartpy.io/dev/templates/FA2.py\" 424)) (tuple (\"//smartpy.io/dev/templates/FA2.py\" 210) (type_annotation (attr (iter \"transfer\" (\"//smartpy.io/dev/templates/FA2.py\" 378)) \"from_\" (\"//smartpy.io/dev/templates/FA2.py\" 379)) \"address\" (\"//smartpy.io/dev/templates/FA2.py\" 205)) (type_annotation (attr (iter \"tx\" (\"//smartpy.io/dev/templates/FA2.py\" 380)) \"token_id\" (\"//smartpy.io/dev/templates/FA2.py\" 392)) \"nat\" (\"//smartpy.io/dev/templates/FA2.py\" 206))) (\"//smartpy.io/dev/templates/FA2.py\" 408)) \"balance\" (\"//smartpy.io/dev/templates/FA2.py\" 408)) (attr (iter \"tx\" (\"//smartpy.io/dev/templates/FA2.py\" 380)) \"amount\" (\"//smartpy.io/dev/templates/FA2.py\" 401)) (\"//smartpy.io/dev/templates/FA2.py\" 408)) (\"//smartpy.io/dev/templates/FA2.py\" 408)) \"Some\" \"None\" (\"//smartpy.io/dev/templates/FA2.py\" 408)) (\"//smartpy.io/dev/templates/FA2.py\" 408)) (ifBlock (contains (attr (data) \"ledger\" (\"//smartpy.io/dev/templates/FA2.py\" 424)) (tuple (\"//smartpy.io/dev/templates/FA2.py\" 210) (type_annotation (attr (iter \"tx\" (\"//smartpy.io/dev/templates/FA2.py\" 380)) \"to_\" (\"//smartpy.io/dev/templates/FA2.py\" 406)) \"address\" (\"//smartpy.io/dev/templates/FA2.py\" 205)) (type_annotation (attr (iter \"tx\" (\"//smartpy.io/dev/templates/FA2.py\" 380)) \"token_id\" (\"//smartpy.io/dev/templates/FA2.py\" 392)) \"nat\" (\"//smartpy.io/dev/templates/FA2.py\" 206))) (\"//smartpy.io/dev/templates/FA2.py\" 409)) ((set (attr (getItem (attr (data) \"ledger\" (\"//smartpy.io/dev/templates/FA2.py\" 424)) (tuple (\"//smartpy.io/dev/templates/FA2.py\" 210) (type_annotation (attr (iter \"tx\" (\"//smartpy.io/dev/templates/FA2.py\" 380)) \"to_\" (\"//smartpy.io/dev/templates/FA2.py\" 406)) \"address\" (\"//smartpy.io/dev/templates/FA2.py\" 205)) (type_annotation (attr (iter \"tx\" (\"//smartpy.io/dev/templates/FA2.py\" 380)) \"token_id\" (\"//smartpy.io/dev/templates/FA2.py\" 392)) \"nat\" (\"//smartpy.io/dev/templates/FA2.py\" 206))) (\"//smartpy.io/dev/templates/FA2.py\" 410)) \"balance\" (\"//smartpy.io/dev/templates/FA2.py\" 410)) (add (attr (getItem (attr (data) \"ledger\" (\"//smartpy.io/dev/templates/FA2.py\" 424)) (tuple (\"//smartpy.io/dev/templates/FA2.py\" 210) (type_annotation (attr (iter \"tx\" (\"//smartpy.io/dev/templates/FA2.py\" 380)) \"to_\" (\"//smartpy.io/dev/templates/FA2.py\" 406)) \"address\" (\"//smartpy.io/dev/templates/FA2.py\" 205)) (type_annotation (attr (iter \"tx\" (\"//smartpy.io/dev/templates/FA2.py\" 380)) \"token_id\" (\"//smartpy.io/dev/templates/FA2.py\" 392)) \"nat\" (\"//smartpy.io/dev/templates/FA2.py\" 206))) (\"//smartpy.io/dev/templates/FA2.py\" 410)) \"balance\" (\"//smartpy.io/dev/templates/FA2.py\" 410)) (attr (iter \"tx\" (\"//smartpy.io/dev/templates/FA2.py\" 380)) \"amount\" (\"//smartpy.io/dev/templates/FA2.py\" 401)) (\"//smartpy.io/dev/templates/FA2.py\" 410)) (\"//smartpy.io/dev/templates/FA2.py\" 410))) (\"//smartpy.io/dev/templates/FA2.py\" 409)) (elseBlock ((set (getItem (attr (data) \"ledger\" (\"//smartpy.io/dev/templates/FA2.py\" 424)) (tuple (\"//smartpy.io/dev/templates/FA2.py\" 210) (type_annotation (attr (iter \"tx\" (\"//smartpy.io/dev/templates/FA2.py\" 380)) \"to_\" (\"//smartpy.io/dev/templates/FA2.py\" 406)) \"address\" (\"//smartpy.io/dev/templates/FA2.py\" 205)) (type_annotation (attr (iter \"tx\" (\"//smartpy.io/dev/templates/FA2.py\" 380)) \"token_id\" (\"//smartpy.io/dev/templates/FA2.py\" 392)) \"nat\" (\"//smartpy.io/dev/templates/FA2.py\" 206))) (\"//smartpy.io/dev/templates/FA2.py\" 412)) (record (\"//smartpy.io/dev/templates/FA2.py\" 223) (balance (attr (iter \"tx\" (\"//smartpy.io/dev/templates/FA2.py\" 380)) \"amount\" (\"//smartpy.io/dev/templates/FA2.py\" 401)))) (\"//smartpy.io/dev/templates/FA2.py\" 412))))) (\"//smartpy.io/dev/templates/FA2.py\" 401)) (elseBlock ())) (\"//smartpy.io/dev/templates/FA2.py\" 380))) (\"//smartpy.io/dev/templates/FA2.py\" 378)))) (update_operators True None None True (\"//smartpy.io/dev/templates/FA2.py\" 456) ((set_type (params (\"//smartpy.io/dev/templates/FA2.py\" 456)) (list (variant ((add_operator (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"//smartpy.io/dev/templates/FA2.py\" 189))) (remove_operator (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"//smartpy.io/dev/templates/FA2.py\" 189)))) None (\"//smartpy.io/dev/templates/FA2.py\" 461))) (\"//smartpy.io/dev/templates/FA2.py\" 461)) (forGroup \"update\" (params (\"//smartpy.io/dev/templates/FA2.py\" 456)) ((match_cases (iter \"update\" (\"//smartpy.io/dev/templates/FA2.py\" 465)) \"match_FA2_466\" ((match (cases_arg \"match_FA2_466\" (\"//smartpy.io/dev/templates/FA2.py\" 466)) \"add_operator\" \"add_operator\" ((verify (or (eq (attr (variant_arg \"add_operator\" (\"//smartpy.io/dev/templates/FA2.py\" 467)) \"owner\" (\"//smartpy.io/dev/templates/FA2.py\" 469)) (sender) (\"//smartpy.io/dev/templates/FA2.py\" 469)) (eq (sender) (attr (data) \"administrator\" (\"//smartpy.io/dev/templates/FA2.py\" 498)) (\"//smartpy.io/dev/templates/FA2.py\" 498)) (\"//smartpy.io/dev/templates/FA2.py\" 469)) (literal (string \"FA2_NOT_ADMIN_OR_OPERATOR\") (\"//smartpy.io/dev/templates/FA2.py\" 470)) (\"//smartpy.io/dev/templates/FA2.py\" 470)) (set (getItem (attr (data) \"operators\" (\"//smartpy.io/dev/templates/FA2.py\" 389)) (type_annotation (record (\"//smartpy.io/dev/templates/FA2.py\" 248) (operator (attr (variant_arg \"add_operator\" (\"//smartpy.io/dev/templates/FA2.py\" 467)) \"operator\" (\"//smartpy.io/dev/templates/FA2.py\" 474))) (owner (attr (variant_arg \"add_operator\" (\"//smartpy.io/dev/templates/FA2.py\" 467)) \"owner\" (\"//smartpy.io/dev/templates/FA2.py\" 469))) (token_id (attr (variant_arg \"add_operator\" (\"//smartpy.io/dev/templates/FA2.py\" 467)) \"token_id\" (\"//smartpy.io/dev/templates/FA2.py\" 475)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"//smartpy.io/dev/templates/FA2.py\" 237)) (\"//smartpy.io/dev/templates/FA2.py\" 249)) (\"//smartpy.io/dev/templates/FA2.py\" 255)) (unit) (\"//smartpy.io/dev/templates/FA2.py\" 255))) (\"//smartpy.io/dev/templates/FA2.py\" 467)) (match (cases_arg \"match_FA2_466\" (\"//smartpy.io/dev/templates/FA2.py\" 466)) \"remove_operator\" \"remove_operator\" ((verify (or (eq (attr (variant_arg \"remove_operator\" (\"//smartpy.io/dev/templates/FA2.py\" 476)) \"owner\" (\"//smartpy.io/dev/templates/FA2.py\" 478)) (sender) (\"//smartpy.io/dev/templates/FA2.py\" 478)) (eq (sender) (attr (data) \"administrator\" (\"//smartpy.io/dev/templates/FA2.py\" 498)) (\"//smartpy.io/dev/templates/FA2.py\" 498)) (\"//smartpy.io/dev/templates/FA2.py\" 478)) (literal (string \"FA2_NOT_ADMIN_OR_OPERATOR\") (\"//smartpy.io/dev/templates/FA2.py\" 479)) (\"//smartpy.io/dev/templates/FA2.py\" 479)) (delItem (attr (data) \"operators\" (\"//smartpy.io/dev/templates/FA2.py\" 389)) (type_annotation (record (\"//smartpy.io/dev/templates/FA2.py\" 248) (operator (attr (variant_arg \"remove_operator\" (\"//smartpy.io/dev/templates/FA2.py\" 476)) \"operator\" (\"//smartpy.io/dev/templates/FA2.py\" 483))) (owner (attr (variant_arg \"remove_operator\" (\"//smartpy.io/dev/templates/FA2.py\" 476)) \"owner\" (\"//smartpy.io/dev/templates/FA2.py\" 478))) (token_id (attr (variant_arg \"remove_operator\" (\"//smartpy.io/dev/templates/FA2.py\" 476)) \"token_id\" (\"//smartpy.io/dev/templates/FA2.py\" 484)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"//smartpy.io/dev/templates/FA2.py\" 237)) (\"//smartpy.io/dev/templates/FA2.py\" 249)) (\"//smartpy.io/dev/templates/FA2.py\" 257))) (\"//smartpy.io/dev/templates/FA2.py\" 476))) (\"//smartpy.io/dev/templates/FA2.py\" 466))) (\"//smartpy.io/dev/templates/FA2.py\" 465)))))\nflags ((initial-cast) (exceptions default-line))\nprivates ()\nviews ((offchain all_tokens False (\"//smartpy.io/dev/templates/FA2.py\" 585) True \"\\n            This view is specified (but optional) in the standard.\\n\\n            This contract is built with assume_consecutive_token_ids =\\n            True, so we return a list constructed from the number of tokens.\\n            \" ((result (range (literal (intOrNat 0) (\"//smartpy.io/dev/templates/FA2.py\" 588)) (attr (data) \"all_tokens\" (\"//smartpy.io/dev/templates/FA2.py\" 588)) (literal (intOrNat 1) (\"//smartpy.io/dev/templates/FA2.py\" 588)) (\"//smartpy.io/dev/templates/FA2.py\" 588)) (\"//smartpy.io/dev/templates/FA2.py\" 588)))) (offchain count_tokens False (\"//smartpy.io/dev/templates/FA2.py\" 573) True \"Get how many tokens are in this FA2 contract.\\n        \" ((result (attr (data) \"all_tokens\" (\"//smartpy.io/dev/templates/FA2.py\" 577)) (\"//smartpy.io/dev/templates/FA2.py\" 577)))) (offchain does_token_exist True (\"//smartpy.io/dev/templates/FA2.py\" 579) True \"Ask whether a token ID is exists.\" ((set_type (params (\"//smartpy.io/dev/templates/FA2.py\" 579)) \"nat\" (\"//smartpy.io/dev/templates/FA2.py\" 582)) (result (contains (attr (data) \"token_metadata\" (\"//smartpy.io/dev/templates/FA2.py\" 583)) (params (\"//smartpy.io/dev/templates/FA2.py\" 579)) (\"//smartpy.io/dev/templates/FA2.py\" 583)) (\"//smartpy.io/dev/templates/FA2.py\" 583)))) (offchain get_balance True (\"//smartpy.io/dev/templates/FA2.py\" 443) True \"This is the `get_balance` view defined in TZIP-12.\" ((set_type (params (\"//smartpy.io/dev/templates/FA2.py\" 443)) (record ((owner \"address\") (token_id \"nat\")) (Some ((\"owner\") (\"token_id\"))) (\"//smartpy.io/dev/templates/FA2.py\" 450)) (\"//smartpy.io/dev/templates/FA2.py\" 450)) (verify (contains (attr (data) \"token_metadata\" (\"//smartpy.io/dev/templates/FA2.py\" 452)) (attr (params (\"//smartpy.io/dev/templates/FA2.py\" 443)) \"token_id\" (\"//smartpy.io/dev/templates/FA2.py\" 451)) (\"//smartpy.io/dev/templates/FA2.py\" 452)) (literal (string \"FA2_TOKEN_UNDEFINED\") (\"//smartpy.io/dev/templates/FA2.py\" 452)) (\"//smartpy.io/dev/templates/FA2.py\" 452)) (result (attr (getItem (attr (data) \"ledger\" (\"//smartpy.io/dev/templates/FA2.py\" 453)) (tuple (\"//smartpy.io/dev/templates/FA2.py\" 210) (type_annotation (attr (params (\"//smartpy.io/dev/templates/FA2.py\" 443)) \"owner\" (\"//smartpy.io/dev/templates/FA2.py\" 451)) \"address\" (\"//smartpy.io/dev/templates/FA2.py\" 205)) (type_annotation (attr (params (\"//smartpy.io/dev/templates/FA2.py\" 443)) \"token_id\" (\"//smartpy.io/dev/templates/FA2.py\" 451)) \"nat\" (\"//smartpy.io/dev/templates/FA2.py\" 206))) (\"//smartpy.io/dev/templates/FA2.py\" 453)) \"balance\" (\"//smartpy.io/dev/templates/FA2.py\" 453)) (\"//smartpy.io/dev/templates/FA2.py\" 453)))) (offchain is_operator True (\"//smartpy.io/dev/templates/FA2.py\" 600) True \"\" ((set_type (params (\"//smartpy.io/dev/templates/FA2.py\" 600)) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"//smartpy.io/dev/templates/FA2.py\" 606)) (\"//smartpy.io/dev/templates/FA2.py\" 606)) (result (contains (attr (data) \"operators\" (\"//smartpy.io/dev/templates/FA2.py\" 608)) (type_annotation (record (\"//smartpy.io/dev/templates/FA2.py\" 248) (operator (attr (params (\"//smartpy.io/dev/templates/FA2.py\" 600)) \"operator\" (\"//smartpy.io/dev/templates/FA2.py\" 610))) (owner (attr (params (\"//smartpy.io/dev/templates/FA2.py\" 600)) \"owner\" (\"//smartpy.io/dev/templates/FA2.py\" 609))) (token_id (attr (params (\"//smartpy.io/dev/templates/FA2.py\" 600)) \"token_id\" (\"//smartpy.io/dev/templates/FA2.py\" 611)))) (record ((operator \"address\") (owner \"address\") (token_id \"nat\")) (Some ((\"owner\") ((\"operator\") (\"token_id\")))) (\"//smartpy.io/dev/templates/FA2.py\" 237)) (\"//smartpy.io/dev/templates/FA2.py\" 249)) (\"//smartpy.io/dev/templates/FA2.py\" 259)) (\"//smartpy.io/dev/templates/FA2.py\" 611)))) (offchain total_supply True (\"//smartpy.io/dev/templates/FA2.py\" 592) True \"\" ((result (getItem (attr (data) \"total_supply\" (\"//smartpy.io/dev/templates/FA2.py\" 595)) (params (\"//smartpy.io/dev/templates/FA2.py\" 592)) (\"//smartpy.io/dev/templates/FA2.py\" 595)) (\"//smartpy.io/dev/templates/FA2.py\" 595)))))\nentry_points_layout ()\ninitial_metadata ((metadata_base (meta_map (\"//smartpy.io/dev/templates/FA2.py\" 674) (elem (literal (string \"version\") (\"//smartpy.io/dev/templates/FA2.py\" 674)) (meta_expr (literal (string \"FA2-nft\") (\"//smartpy.io/dev/templates/FA2.py\" 674)))) (elem (literal (string \"description\") (\"//smartpy.io/dev/templates/FA2.py\" 674)) (meta_expr (literal (string \"This is a didactic reference implementation of FA2, a.k.a. TZIP-012, using SmartPy.\n\nThis particular contract uses the configuration named: FA2-nft.\") (\"//smartpy.io/dev/templates/FA2.py\" 674)))) (elem (literal (string \"interfaces\") (\"//smartpy.io/dev/templates/FA2.py\" 674)) (meta_list (\"//smartpy.io/dev/templates/FA2.py\" 674) (meta_expr (literal (string \"TZIP-012\") (\"//smartpy.io/dev/templates/FA2.py\" 674))) (meta_expr (literal (string \"TZIP-016\") (\"//smartpy.io/dev/templates/FA2.py\" 674))))) (elem (literal (string \"authors\") (\"//smartpy.io/dev/templates/FA2.py\" 674)) (meta_list (\"//smartpy.io/dev/templates/FA2.py\" 674) (meta_expr (literal (string \"Seb Mondet <https://seb.mondet.org>\") (\"//smartpy.io/dev/templates/FA2.py\" 674))))) (elem (literal (string \"homepage\") (\"//smartpy.io/dev/templates/FA2.py\" 674)) (meta_expr (literal (string \"https://gitlab.com/smondet/fa2-smartpy\") (\"//smartpy.io/dev/templates/FA2.py\" 674)))) (elem (literal (string \"views\") (\"//smartpy.io/dev/templates/FA2.py\" 674)) (meta_list (\"//smartpy.io/dev/templates/FA2.py\" 674) (meta_view \"get_balance\" (\"//smartpy.io/dev/templates/FA2.py\" 443)) (meta_view \"does_token_exist\" (\"//smartpy.io/dev/templates/FA2.py\" 579)) (meta_view \"count_tokens\" (\"//smartpy.io/dev/templates/FA2.py\" 573)) (meta_view \"all_tokens\" (\"//smartpy.io/dev/templates/FA2.py\" 585)) (meta_view \"is_operator\" (\"//smartpy.io/dev/templates/FA2.py\" 600)) (meta_view \"total_supply\" (\"//smartpy.io/dev/templates/FA2.py\" 592)))) (elem (literal (string \"source\") (\"//smartpy.io/dev/templates/FA2.py\" 674)) (meta_map (\"//smartpy.io/dev/templates/FA2.py\" 674) (elem (literal (string \"tools\") (\"//smartpy.io/dev/templates/FA2.py\" 674)) (meta_list (\"//smartpy.io/dev/templates/FA2.py\" 674) (meta_expr (literal (string \"SmartPy\") (\"//smartpy.io/dev/templates/FA2.py\" 674))))) (elem (literal (string \"location\") (\"//smartpy.io/dev/templates/FA2.py\" 674)) (meta_expr (literal (string \"https://gitlab.com/smondet/fa2-smartpy.git\") (\"//smartpy.io/dev/templates/FA2.py\" 674)))))) (elem (literal (string \"permissions\") (\"//smartpy.io/dev/templates/FA2.py\" 674)) (meta_map (\"//smartpy.io/dev/templates/FA2.py\" 674) (elem (literal (string \"operator\") (\"//smartpy.io/dev/templates/FA2.py\" 674)) (meta_expr (literal (string \"owner-or-operator-transfer\") (\"//smartpy.io/dev/templates/FA2.py\" 674)))) (elem (literal (string \"receiver\") (\"//smartpy.io/dev/templates/FA2.py\" 674)) (meta_expr (literal (string \"owner-no-hook\") (\"//smartpy.io/dev/templates/FA2.py\" 674)))) (elem (literal (string \"sender\") (\"//smartpy.io/dev/templates/FA2.py\" 674)) (meta_expr (literal (string \"owner-no-hook\") (\"//smartpy.io/dev/templates/FA2.py\" 674)))))) (elem (literal (string \"fa2-smartpy\") (\"//smartpy.io/dev/templates/FA2.py\" 674)) (meta_map (\"//smartpy.io/dev/templates/FA2.py\" 674) (elem (literal (string \"configuration\") (\"//smartpy.io/dev/templates/FA2.py\" 674)) (meta_map (\"//smartpy.io/dev/templates/FA2.py\" 674) (elem (literal (string \"add_mutez_transfer\") (\"//smartpy.io/dev/templates/FA2.py\" 674)) (meta_expr (literal (bool False) (\"//smartpy.io/dev/templates/FA2.py\" 674)))) (elem (literal (string \"allow_self_transfer\") (\"//smartpy.io/dev/templates/FA2.py\" 674)) (meta_expr (literal (bool False) (\"//smartpy.io/dev/templates/FA2.py\" 674)))) (elem (literal (string \"assume_consecutive_token_ids\") (\"//smartpy.io/dev/templates/FA2.py\" 674)) (meta_expr (literal (bool True) (\"//smartpy.io/dev/templates/FA2.py\" 674)))) (elem (literal (string \"force_layouts\") (\"//smartpy.io/dev/templates/FA2.py\" 674)) (meta_expr (literal (bool True) (\"//smartpy.io/dev/templates/FA2.py\" 674)))) (elem (literal (string \"lazy_entry_points\") (\"//smartpy.io/dev/templates/FA2.py\" 674)) (meta_expr (literal (bool False) (\"//smartpy.io/dev/templates/FA2.py\" 674)))) (elem (literal (string \"name\") (\"//smartpy.io/dev/templates/FA2.py\" 674)) (meta_expr (literal (string \"FA2-nft\") (\"//smartpy.io/dev/templates/FA2.py\" 674)))) (elem (literal (string \"non_fungible\") (\"//smartpy.io/dev/templates/FA2.py\" 674)) (meta_expr (literal (bool True) (\"//smartpy.io/dev/templates/FA2.py\" 674)))) (elem (literal (string \"readable\") (\"//smartpy.io/dev/templates/FA2.py\" 674)) (meta_expr (literal (bool True) (\"//smartpy.io/dev/templates/FA2.py\" 674)))) (elem (literal (string \"single_asset\") (\"//smartpy.io/dev/templates/FA2.py\" 674)) (meta_expr (literal (bool False) (\"//smartpy.io/dev/templates/FA2.py\" 674)))) (elem (literal (string \"store_total_supply\") (\"//smartpy.io/dev/templates/FA2.py\" 674)) (meta_expr (literal (bool True) (\"//smartpy.io/dev/templates/FA2.py\" 674)))) (elem (literal (string \"support_operator\") (\"//smartpy.io/dev/templates/FA2.py\" 674)) (meta_expr (literal (bool True) (\"//smartpy.io/dev/templates/FA2.py\" 674)))) (elem (literal (string \"use_token_metadata_offchain_view\") (\"//smartpy.io/dev/templates/FA2.py\" 674)) (meta_expr (literal (bool False) (\"//smartpy.io/dev/templates/FA2.py\" 674)))))))))))\nbalance ())",
    "id": "(static_id 0 (\"//smartpy.io/dev/templates/FA2.py\" 366))",
    "line_no": "(\"nft_market_place.py\" 85)",
    "show": true
   },
   {
    "action": "html",
    "inner": "MarketPlace",
    "line_no": "(\"nft_market_place.py\" 87)",
    "tag": "h1"
   },
   {
    "action": "newContract",
    "accept_unknown_types": false,
    "export": "(template_id (static_id 1 (\"nft_market_place.py\" 19)) \nstorage (record (\"nft_market_place.py\" 19) (admin (resolve (attr (account_of_seed \"admin\" (\"nft_market_place.py\" 80)) \"address\" (\"nft_market_place.py\" 80)) (\"nft_market_place.py\" 80))) (data (type_annotation (big_map (\"nft_market_place.py\" 18) ) (bigmap \"nat\" (record ((amount \"nat\") (author \"address\") (collectable \"bool\") (holder \"address\") (token_id \"nat\")) None (\"nft_market_place.py\" 18))) (\"nft_market_place.py\" 18))) (metadata (big_map (\"nft_market_place.py\" 88) ((literal (string \"\") (\"nft_market_place.py\" 89)) (literal (bytes \"0x697066733a2f2f516d57386a504d64426d46767353456f4c57505068616f7a4e366a47514678786b77754d4c745646714579364662\") (\"nft_market_place.py\" 88))))) (token (contract_address (static_id 0 (\"//smartpy.io/dev/templates/FA2.py\" 366)) \"\" (\"//smartpy.io/dev/templates/FA2.py\" 366))) (token_id (literal (intOrNat 0) (\"nft_market_place.py\" 19))))\nstorage_type (())\nmessages ((collect True None None True (\"nft_market_place.py\" 52) ((verify (and (and (and (eq (amount) (mul_overloaded (attr (getItem (attr (data) \"data\" (\"nft_market_place.py\" 54)) (attr (params (\"nft_market_place.py\" 52)) \"token_id\" (\"nft_market_place.py\" 54)) (\"nft_market_place.py\" 54)) \"amount\" (\"nft_market_place.py\" 54)) (literal (mutez 1) (\"nft_market_place.py\" 54)) (\"nft_market_place.py\" 54)) (\"nft_market_place.py\" 54)) (neq (attr (getItem (attr (data) \"data\" (\"nft_market_place.py\" 54)) (attr (params (\"nft_market_place.py\" 52)) \"token_id\" (\"nft_market_place.py\" 54)) (\"nft_market_place.py\" 54)) \"amount\" (\"nft_market_place.py\" 54)) (literal (intOrNat 0) (\"nft_market_place.py\" 54)) (\"nft_market_place.py\" 54)) (\"nft_market_place.py\" 54)) (eq (attr (getItem (attr (data) \"data\" (\"nft_market_place.py\" 54)) (attr (params (\"nft_market_place.py\" 52)) \"token_id\" (\"nft_market_place.py\" 54)) (\"nft_market_place.py\" 54)) \"collectable\" (\"nft_market_place.py\" 54)) (literal (bool True) (\"nft_market_place.py\" 54)) (\"nft_market_place.py\" 54)) (\"nft_market_place.py\" 54)) (neq (attr (getItem (attr (data) \"data\" (\"nft_market_place.py\" 54)) (attr (params (\"nft_market_place.py\" 52)) \"token_id\" (\"nft_market_place.py\" 54)) (\"nft_market_place.py\" 54)) \"author\" (\"nft_market_place.py\" 54)) (sender) (\"nft_market_place.py\" 54)) (\"nft_market_place.py\" 54)) (\"nft_market_place.py\" 54)) (set (attr (getItem (attr (data) \"data\" (\"nft_market_place.py\" 54)) (attr (params (\"nft_market_place.py\" 52)) \"token_id\" (\"nft_market_place.py\" 54)) (\"nft_market_place.py\" 55)) \"collectable\" (\"nft_market_place.py\" 55)) (literal (bool False) (\"nft_market_place.py\" 55)) (\"nft_market_place.py\" 55)) (set (attr (getItem (attr (data) \"data\" (\"nft_market_place.py\" 54)) (attr (params (\"nft_market_place.py\" 52)) \"token_id\" (\"nft_market_place.py\" 54)) (\"nft_market_place.py\" 56)) \"holder\" (\"nft_market_place.py\" 56)) (sender) (\"nft_market_place.py\" 56)) (set (operations (\"nft_market_place.py\" 59)) (cons (transfer (unit) (split_tokens (amount) (literal (intOrNat 97) (\"nft_market_place.py\" 59)) (literal (intOrNat 100) (\"nft_market_place.py\" 59)) (\"nft_market_place.py\" 59)) (openVariant (contract \"\" \"unit\" (attr (getItem (attr (data) \"data\" (\"nft_market_place.py\" 54)) (attr (params (\"nft_market_place.py\" 52)) \"token_id\" (\"nft_market_place.py\" 54)) (\"nft_market_place.py\" 59)) \"author\" (\"nft_market_place.py\" 59)) (\"nft_market_place.py\" 59)) \"Some\" \"None\" (\"nft_market_place.py\" 59)) (\"nft_market_place.py\" 59)) (operations (\"nft_market_place.py\" 59)) (\"nft_market_place.py\" 59)) (\"nft_market_place.py\" 59)) (set (operations (\"nft_market_place.py\" 50)) (cons (transfer (list (\"nft_market_place.py\" 50) (record (\"nft_market_place.py\" 50) (from_ (self_address)) (txs (list (\"nft_market_place.py\" 50) (record (\"nft_market_place.py\" 50) (amount (literal (intOrNat 1) (\"nft_market_place.py\" 50))) (to_ (sender)) (token_id (attr (params (\"nft_market_place.py\" 52)) \"token_id\" (\"nft_market_place.py\" 54)))))))) (literal (mutez 0) (\"nft_market_place.py\" 50)) (openVariant (contract \"transfer\" (list (record ((from_ \"address\") (txs (list (record ((amount \"nat\") (to_ \"address\") (token_id \"nat\")) (Some ((\"to_\") ((\"token_id\") (\"amount\")))) (\"nft_market_place.py\" 49))))) None (\"nft_market_place.py\" 49))) (attr (data) \"token\" (\"nft_market_place.py\" 61)) (\"nft_market_place.py\" 49)) \"Some\" \"None\" (\"nft_market_place.py\" 49)) (\"nft_market_place.py\" 50)) (operations (\"nft_market_place.py\" 50)) (\"nft_market_place.py\" 50)) (\"nft_market_place.py\" 50)))) (collect_management_rewards True None None True (\"nft_market_place.py\" 70) ((verify (eq (sender) (attr (data) \"admin\" (\"nft_market_place.py\" 72)) (\"nft_market_place.py\" 72)) (\"nft_market_place.py\" 72)) (set (operations (\"nft_market_place.py\" 73)) (cons (transfer (unit) (attr (params (\"nft_market_place.py\" 70)) \"amount\" (\"nft_market_place.py\" 73)) (openVariant (contract \"\" \"unit\" (attr (params (\"nft_market_place.py\" 70)) \"address\" (\"nft_market_place.py\" 73)) (\"nft_market_place.py\" 73)) \"Some\" \"None\" (\"nft_market_place.py\" 73)) (\"nft_market_place.py\" 73)) (operations (\"nft_market_place.py\" 73)) (\"nft_market_place.py\" 73)) (\"nft_market_place.py\" 73)))) (mint True None None True (\"nft_market_place.py\" 22) ((verify (gt (attr (params (\"nft_market_place.py\" 22)) \"amount\" (\"nft_market_place.py\" 24)) (literal (intOrNat 0) (\"nft_market_place.py\" 24)) (\"nft_market_place.py\" 24)) (\"nft_market_place.py\" 24)) (set (operations (\"nft_market_place.py\" 43)) (cons (transfer (record (\"nft_market_place.py\" 40) (address (self_address)) (amount (literal (intOrNat 1) (\"nft_market_place.py\" 40))) (metadata (map (\"nft_market_place.py\" 40) ((literal (string \"\") (\"nft_market_place.py\" 89)) (attr (params (\"nft_market_place.py\" 22)) \"metadata\" (\"nft_market_place.py\" 40))))) (token_id (attr (data) \"token_id\" (\"nft_market_place.py\" 39)))) (literal (mutez 0) (\"nft_market_place.py\" 42)) (openVariant (contract \"mint\" (record ((address \"address\") (amount \"nat\") (metadata (map \"string\" \"bytes\")) (token_id \"nat\")) None (\"nft_market_place.py\" 30)) (attr (data) \"token\" (\"nft_market_place.py\" 61)) (\"nft_market_place.py\" 33)) \"Some\" \"None\" (\"nft_market_place.py\" 33)) (\"nft_market_place.py\" 43)) (operations (\"nft_market_place.py\" 43)) (\"nft_market_place.py\" 43)) (\"nft_market_place.py\" 43)) (set (getItem (attr (data) \"data\" (\"nft_market_place.py\" 54)) (attr (data) \"token_id\" (\"nft_market_place.py\" 39)) (\"nft_market_place.py\" 45)) (record (\"nft_market_place.py\" 45) (amount (attr (params (\"nft_market_place.py\" 22)) \"amount\" (\"nft_market_place.py\" 24))) (author (sender)) (collectable (literal (bool True) (\"nft_market_place.py\" 45))) (holder (self_address)) (token_id (attr (data) \"token_id\" (\"nft_market_place.py\" 39)))) (\"nft_market_place.py\" 45)) (set (attr (data) \"token_id\" (\"nft_market_place.py\" 39)) (add (attr (data) \"token_id\" (\"nft_market_place.py\" 39)) (literal (intOrNat 1) (\"nft_market_place.py\" 46)) (\"nft_market_place.py\" 46)) (\"nft_market_place.py\" 46)))) (update_admin True None None True (\"nft_market_place.py\" 64) ((verify (eq (sender) (attr (data) \"admin\" (\"nft_market_place.py\" 72)) (\"nft_market_place.py\" 66)) (\"nft_market_place.py\" 66)) (set (attr (data) \"admin\" (\"nft_market_place.py\" 72)) (params (\"nft_market_place.py\" 64)) (\"nft_market_place.py\" 67)))))\nflags ()\nprivates ()\nviews ()\nentry_points_layout ()\ninitial_metadata ()\nbalance ())",
    "id": "(static_id 1 (\"nft_market_place.py\" 19))",
    "line_no": "(\"nft_market_place.py\" 89)",
    "show": true
   },
   {
    "action": "html",
    "inner": "Mint",
    "line_no": "(\"nft_market_place.py\" 92)",
    "tag": "h1"
   },
   {
    "action": "message",
    "id": "(static_id 1 (\"nft_market_place.py\" 19))",
    "line_no": "(\"nft_market_place.py\" 93)",
    "message": "mint",
    "params": "(record (\"nft_market_place.py\" 93) (amount (literal (intOrNat 100000000) (\"nft_market_place.py\" 93))) (metadata (pack (literal (string \"ipfs://bafyreibwl5hhjgrat5l7cmjlv6ppwghm6ijygpz2xor2r6incfcxnl7y3e/metadata.json\") (\"nft_market_place.py\" 93)) (\"nft_market_place.py\" 93))))",
    "sender": "seed:admin",
    "valid": "(literal (bool False) (\"nft_market_place.py\" 93))"
   },
   {
    "action": "message",
    "id": "(static_id 0 (\"//smartpy.io/dev/templates/FA2.py\" 366))",
    "line_no": "(\"nft_market_place.py\" 94)",
    "message": "set_administrator",
    "params": "(contract_address (static_id 1 (\"nft_market_place.py\" 19)) \"\" (\"nft_market_place.py\" 19))",
    "sender": "seed:admin"
   },
   {
    "action": "message",
    "id": "(static_id 1 (\"nft_market_place.py\" 19))",
    "line_no": "(\"nft_market_place.py\" 95)",
    "message": "mint",
    "params": "(record (\"nft_market_place.py\" 95) (amount (literal (intOrNat 100000000) (\"nft_market_place.py\" 95))) (metadata (pack (literal (string \"ipfs://bafyreibwl5hhjgrat5l7cmjlv6ppwghm6ijygpz2xor2r6incfcxnl7y3e/metadata.json\") (\"nft_market_place.py\" 95)) (\"nft_market_place.py\" 95))))",
    "sender": "seed:admin"
   },
   {
    "action": "message",
    "id": "(static_id 1 (\"nft_market_place.py\" 19))",
    "line_no": "(\"nft_market_place.py\" 96)",
    "message": "mint",
    "params": "(record (\"nft_market_place.py\" 96) (amount (literal (intOrNat 5600000) (\"nft_market_place.py\" 96))) (metadata (pack (literal (string \"123423\") (\"nft_market_place.py\" 96)) (\"nft_market_place.py\" 96))))",
    "sender": "seed:user1"
   },
   {
    "action": "html",
    "inner": "Collect",
    "line_no": "(\"nft_market_place.py\" 97)",
    "tag": "h1"
   },
   {
    "action": "message",
    "id": "(static_id 1 (\"nft_market_place.py\" 19))",
    "line_no": "(\"nft_market_place.py\" 98)",
    "message": "collect",
    "params": "(record (\"nft_market_place.py\" 98) (token_id (literal (intOrNat 1) (\"nft_market_place.py\" 98))))",
    "amount": "(literal (mutez 5600000) (\"nft_market_place.py\" 98))",
    "sender": "seed:user2"
   },
   {
    "action": "message",
    "id": "(static_id 1 (\"nft_market_place.py\" 19))",
    "line_no": "(\"nft_market_place.py\" 100)",
    "message": "collect_management_rewards",
    "params": "(record (\"nft_market_place.py\" 100) (address (resolve (attr (account_of_seed \"admin\" (\"nft_market_place.py\" 80)) \"address\" (\"nft_market_place.py\" 80)) (\"nft_market_place.py\" 80))) (amount (literal (mutez 1000) (\"nft_market_place.py\" 100))))",
    "sender": "seed:admin"
   }
  ],
  "kind": "test"
 }
]